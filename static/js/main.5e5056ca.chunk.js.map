{"version":3,"sources":["components/TodoTask/TodoTask.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","utils/filter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoTask","todo","activeTodoId","onActiveTodo","id","completed","title","isTodoActive","todoId","className","classNames","type","onClick","TodoList","todos","map","TodoFilter","query","onChangeQuery","onChangeType","useState","tempQuery","setTempQuery","applyQuery","useCallback","debounce","onChange","event","target","value","placeholder","preventDefault","trim","toLowerCase","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterType","getTodos","Loader","TodoModal","onClose","user","setUser","useEffect","userId","data","href","email","name","filterTodos","filterType","a","todosFromServer","ALL","ACTIVE","COMPLETED","filter","length","includes","App","setTodos","activeTodo","setActiveTodo","todoType","setTodoType","setQuery","fetchData","filteredTodos","activeId","todoTemp","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e5056ca.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  activeTodoId?: number | null,\n  onActiveTodo: (activeId: number) => void\n};\n\nexport const TodoTask: React.FC<Props> = ({\n  todo,\n  activeTodoId,\n  onActiveTodo,\n}) => {\n  const {\n    id,\n    completed,\n    title,\n  } = todo;\n\n  const isTodoActive = (todoId: number) => activeTodoId === todoId;\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      // has-background-info-light\n      className={classNames({\n        'has-background-info-light': isTodoActive(id),\n      })}\n    >\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames({\n          'has-text-danger': !completed,\n          'has-text-success': completed,\n        })}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => onActiveTodo(id)}\n        >\n          <span className=\"icon\">\n            <i\n              className={classNames({\n                'far fa-eye': !isTodoActive(id),\n                'far fa-eye-slash': isTodoActive(id),\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoTask } from '../TodoTask/TodoTask';\n\ntype Props = {\n  todos: Todo[],\n  activeTodoId?: number | null,\n  onActiveTodo: (activeId: number) => void\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  activeTodoId,\n  onActiveTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <TodoTask\n            key={todo.id}\n            todo={todo}\n            activeTodoId={activeTodoId}\n            onActiveTodo={onActiveTodo}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import debounce from 'lodash/debounce';\nimport { useState, useCallback } from 'react';\nimport { FilterType } from '../../utils/filter';\n\ntype Props = {\n  query: string,\n  onChangeQuery: (newQuery: string) => void,\n  onChangeType: (newType: FilterType) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onChangeQuery,\n  onChangeType,\n}) => {\n  const [tempQuery, setTempQuery] = useState('');\n\n  const applyQuery = useCallback(\n    debounce(onChangeQuery, 500),\n    [],\n  );\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    setTempQuery(event.target.value);\n\n    applyQuery(event.target.value.trim().toLowerCase());\n  };\n\n  const clearSearch = () => {\n    setTempQuery('');\n    onChangeQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => onChangeType(event.target.value as FilterType)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={tempQuery}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearSearch}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { getTodos } from '../api';\nimport { Todo } from '../types/Todo';\n\nexport enum FilterType {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n\nexport async function filterTodos(\n  filterType: FilterType,\n  query: string,\n) {\n  let todosFromServer = await getTodos();\n\n  switch (filterType) {\n    case FilterType.ALL:\n      break;\n    case FilterType.ACTIVE:\n      todosFromServer = todosFromServer.filter((todo: Todo) => !todo.completed);\n      break;\n\n    case FilterType.COMPLETED:\n      todosFromServer = todosFromServer.filter((todo: Todo) => todo.completed);\n      break;\n    default: break;\n  }\n\n  if (query.length > 0) {\n    todosFromServer = todosFromServer\n      .filter((todo: Todo) => todo.title.includes(query));\n  }\n\n  return todosFromServer;\n}\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport className from 'classnames';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo,\n  onClose: () => void\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const {\n    id,\n    title,\n    completed,\n  } = todo;\n  const [user, setUser] = useState<User | null>();\n\n  useEffect(() => {\n    getUser(todo.userId).then(data => {\n      setUser(data);\n    });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              onClick={onClose}\n              data-cy=\"modal-close\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={className({\n                'has-text-danger': !completed,\n                'has-text-success': completed,\n              })}\n              >\n                {completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\nimport { FilterType, filterTodos } from './utils/filter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[] | null>(null);\n  const [activeTodo, setActiveTodo] = useState<Todo | null>(null);\n  const [todoType, setTodoType] = useState(FilterType.ALL);\n  const [query, setQuery] = useState('');\n\n  const fetchData = async () => {\n    const filteredTodos = await filterTodos(todoType, query);\n\n    setTodos(filteredTodos);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [query, todoType]);\n\n  const handleSetActiveTodo = (activeId: number) => {\n    if (todos !== null) {\n      const todoTemp = todos.find((todo) => todo.id === activeId) || null;\n\n      setActiveTodo(todoTemp);\n    }\n  };\n\n  const handleClose = () => {\n    setActiveTodo(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onChangeQuery={setQuery}\n                onChangeType={setTodoType}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos\n                ? <Loader />\n                : <TodoList todos={todos} activeTodoId={activeTodo?.id} onActiveTodo={handleSetActiveTodo} />}\n\n            </div>\n          </div>\n        </div>\n      </div>\n      {activeTodo && (\n        <TodoModal todo={activeTodo} onClose={handleClose} />\n      )}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}